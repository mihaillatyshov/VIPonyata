"""main

Revision ID: d21b95be8798
Revises: 
Create Date: 2023-10-24 23:52:48.015446

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd21b95be8798'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('difficulty', sa.String(length=128), nullable=False),
    sa.Column('difficulty_color', sa.String(length=64), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=True),
    sa.Column('img', sa.String(length=1024), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dictionary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('char_jp', sa.String(length=128), nullable=True),
    sa.Column('word_jp', sa.String(length=128), nullable=True),
    sa.Column('ru', sa.String(length=128), nullable=False),
    sa.Column('img', sa.String(length=1024), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('nickname', sa.String(length=128), nullable=False),
    sa.Column('password', sa.String(length=512), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('theme', sa.String(length=128), nullable=True),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('avatar', sa.String(length=1024), nullable=True),
    sa.Column('form', sa.Text(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nickname')
    )
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=True),
    sa.Column('img', sa.String(length=1024), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'course_id', name='idx_user_course')
    )
    op.create_table('users_dictionary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('img', sa.String(length=1024), nullable=True),
    sa.Column('association', sa.String(length=1024), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('dictionary_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dictionary_id'], ['dictionary.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'dictionary_id', name='idx_user_dictionary')
    )
    op.create_table('assessments',
    sa.Column('tasks', sa.Text(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=True),
    sa.Column('time_limit', sa.Time(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drillings',
    sa.Column('tasks', sa.String(length=2048), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=True),
    sa.Column('time_limit', sa.Time(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('final_bosses',
    sa.Column('tasks', sa.Text(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=True),
    sa.Column('time_limit', sa.Time(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hieroglyphs',
    sa.Column('tasks', sa.String(length=2048), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=True),
    sa.Column('time_limit', sa.Time(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'lesson_id', name='idx_user_lesson')
    )
    op.create_table('assessment_tries',
    sa.Column('base_id', sa.Integer(), nullable=False),
    sa.Column('done_tasks', sa.Text(), nullable=False),
    sa.Column('checked_tasks', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('try_number', sa.Integer(), nullable=False),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['base_id'], ['assessments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drilling_cards',
    sa.Column('base_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sentence', sa.String(length=256), nullable=False),
    sa.Column('answer', sa.String(length=256), nullable=False),
    sa.Column('dictionary_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['base_id'], ['drillings.id'], ),
    sa.ForeignKeyConstraint(['dictionary_id'], ['dictionary.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drilling_tries',
    sa.Column('base_id', sa.Integer(), nullable=False),
    sa.Column('done_tasks', sa.String(length=2048), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('try_number', sa.Integer(), nullable=False),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['base_id'], ['drillings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('final_boss_tries',
    sa.Column('base_id', sa.Integer(), nullable=False),
    sa.Column('done_tasks', sa.Text(), nullable=False),
    sa.Column('checked_tasks', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('try_number', sa.Integer(), nullable=False),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['base_id'], ['final_bosses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hieroglyph_cards',
    sa.Column('base_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sentence', sa.String(length=256), nullable=False),
    sa.Column('answer', sa.String(length=256), nullable=False),
    sa.Column('dictionary_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['base_id'], ['hieroglyphs.id'], ),
    sa.ForeignKeyConstraint(['dictionary_id'], ['dictionary.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hieroglyph_tries',
    sa.Column('base_id', sa.Integer(), nullable=False),
    sa.Column('done_tasks', sa.String(length=2048), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('try_number', sa.Integer(), nullable=False),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['base_id'], ['hieroglyphs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications_student_to_teacher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('viewed', sa.Boolean(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('drilling_try_id', sa.Integer(), nullable=True),
    sa.Column('hieroglyph_try_id', sa.Integer(), nullable=True),
    sa.Column('assessment_try_id', sa.Integer(), nullable=True),
    sa.Column('final_boss_try_id', sa.Integer(), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assessment_try_id'], ['assessment_tries.id'], ),
    sa.ForeignKeyConstraint(['drilling_try_id'], ['drilling_tries.id'], ),
    sa.ForeignKeyConstraint(['final_boss_try_id'], ['final_boss_tries.id'], ),
    sa.ForeignKeyConstraint(['hieroglyph_try_id'], ['hieroglyph_tries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications_teacher_to_student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('viewed', sa.Boolean(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.Column('assessment_try_id', sa.Integer(), nullable=True),
    sa.Column('final_boss_try_id', sa.Integer(), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assessment_try_id'], ['assessment_tries.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['final_boss_try_id'], ['final_boss_tries.id'], ),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notifications_teacher_to_student')
    op.drop_table('notifications_student_to_teacher')
    op.drop_table('hieroglyph_tries')
    op.drop_table('hieroglyph_cards')
    op.drop_table('final_boss_tries')
    op.drop_table('drilling_tries')
    op.drop_table('drilling_cards')
    op.drop_table('assessment_tries')
    op.drop_table('users_lessons')
    op.drop_table('hieroglyphs')
    op.drop_table('final_bosses')
    op.drop_table('drillings')
    op.drop_table('assessments')
    op.drop_table('users_dictionary')
    op.drop_table('users_courses')
    op.drop_table('lessons')
    op.drop_table('users')
    op.drop_table('dictionary')
    op.drop_table('courses')
    # ### end Alembic commands ###
